
@using PollsApp.Mvc.ViewModels

@model PollsViewModel
@{
    double length = 200;
    double green;
    double white;

    string disabled = "";
}



<partial name="_UserPanel" />

<input id="poll-id-current" type="text" hidden value="@Model.PollInfo.Poll.Id" />

<form method="post" class="poll-container" id="poll-container-id">
    <h3 class="poll-title">@Model.PollInfo.Poll.Title</h3>
    <br />
    @if (Model.PollInfo.Poll.EndDate != null && Model.PollInfo.Poll.IsActive)
    {
        if (Model.PollInfo.Poll.EndDate > DateTime.Now)
        {
            <p>Опрос завершится @Model.PollInfo.Poll.EndDate?.ToString("G")</p>
        }
        else
        {
            <p>Опрос завершен</p>
            disabled = "disabled";
        }
    }
    @if (!Model.PollInfo.Poll.IsActive)
    {
        <p>опрос завершен</p>
        disabled = "disabled";
    }
    <br />
    <div class="options">
        @foreach (var option in Model.PollInfo.Options)
        {
            if(Model.PollInfo.Votes == 0)
            {
                green = 0;
                white = length;
            }
            else
            {
                green = Math.Round(((double)option.Votes / (double)Model.PollInfo.Votes) * length, 0);
                white = Math.Round((length - green), 0);
            }
            Console.WriteLine("users count:" + @option.Users.Count);

            <div class="option-item">
                <label class="option-label" for="@option.PollOption.Id">
                    <div class="option-items">
                        @if (!String.IsNullOrEmpty(option.PollOption.Text))
                        {
                            <div class="option-text-container option-item-container">
                                @option.PollOption.Text
                            </div>
                        }
                        @if (option.PollOption.Photo is not null)
                        {
                            <div class="option-photo-container option-item-container">
                                <img class="option-photo" src="data:image/jpeg;base64,@Convert.ToBase64String(option.PollOption.Photo)" onClick="showImage(this.src)" alt="img" />
                            </div>
                        }
                        @if (option.PollOption.Audio is not null)
                        {
                            <div id="audio-player" class="option-audio-container option-item-container">
                                <audio class="audio" controls src="data:audio/mp3;base64,@Convert.ToBase64String(option.PollOption.Audio)"></audio>
                            </div>
                        }
                    </div>
                    <div class="lines-container">
                        <div id="green-@option.PollOption.Id" class="green-line" style="width: @(green)px"></div>
                        <div id="white-@option.PollOption.Id" class="white-line" style="width: @(white)px"></div>
                    </div>
                    <input type="radio" name="optionId" value="@option.PollOption.Id" @(option.IsChecked ? "checked" : "") @disabled @(Model.PollInfo.IsVoted ? "disabled" : "") />
                    <p class="votes-number">@option.Votes</p>
                    <div class="peek" id="show-voted-@option.PollOption.Id" onmouseover="showVoted(@option.PollOption.Id)" onmouseleave="hideVoted(@option.PollOption.Id)">&#128065;</div>

                    <div class="hidden" id="voted-users-@option.PollOption.Id">
                        @foreach(var u in option.Users)
                        {
                            string imgSrc = "https://secure.gravatar.com/avatar/82ac62bd494834f0fc4f1c338131460d?s=520&d=mm&r=g";
                            if (u.Avatar != null)
                            {
                                imgSrc = "data:image/jpeg;base64," + Convert.ToBase64String(@u.Avatar);
                            }
                            <div class="voted-item">
                                <img class="voted-avatar" src="@imgSrc" alt="img" />
                                <div>@u.Name</div>
                            </div>
                        }
                    </div>

                    </label>
                    <br/>
            </div>
        }
    </div>
    <br />
    @{
        if (Model.PollInfo.IsVoted)
        {
            disabled = "disabled";
        }
    }
    @if (disabled != "disabled")
    {
        Console.WriteLine("disabled: " + disabled);
        <div style="display: flex; flex-direction: row">
            <button class="btn-vote" type="submit" @(Model.PollInfo.IsVoted ? "disabled" : "") @disabled>Проголосовать</button>
            <div>
                <label for="isAnon">анонимно</label>
                <input type="checkbox" name="isAnon" id="isAnon" value="true" @(Model.PollInfo.IsVoted ? "disabled" : "") @(Model.PollInfo.IsAnon ? "checked" : "") @disabled />
            </div>
        </div>
    }
</form>

<div id="opened-photo-container" class="opened-photo-container-hidden">
    <img id="opened-photo" src="" class="" />
    <div class="hide-opened-photo" onclick="hideOpenedPhoto()">&#10006;</div>
</div>

@if (Model.PollInfo.Poll.AllowComments)
{
    <br />
    <partial name="_Comments" />
}

<input type="text" hidden value="@Model.PollInfo.Poll.Id" id="current-poll-id"/>

<script src="~/js/poll.js"></script>
<script src="~/js/signalr/dist/browser/signalr.js" charset="utf-8"></script>
<script src="~/js/comments.js"></script>
<script src="~/js/emoji.js"></script>

